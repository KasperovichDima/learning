"""Базовые кодировщики и декодировщики"""


# Строка «El Niño», закодированная тремя кодеками, дает совершенно разные
# последовательности байтов:
for codec in ['latin_1', 'utf_8', 'utf_16']:
    print(codec, 'El Niño'.encode(codec), sep='\t')
# latin_1 b'El Ni\xf1o'
# utf_8   b'El Ni\xc3\xb1o'
# utf_16  b'\xff\xfeE\x00l\x00 \x00N\x00i\x00\xf1\x00o\x00'

"""
ASCII – общее подмножество всех известных мне кодировок, поэтому лю-
бая кодировка должна работать, если текст состоит только из ASCII-символов.
В Python 3.7 добавлен (https://docs.python.org/3/library/ stdtypes.html#str.isascii),
новый булев метод str.isascii() , который проверяет, что Unicode-текст на
100 % состоит из ASCII-символов. Если это так, то его можно представить
в виде байтов в любой кодировке, не опасаясь исключения UnicodeEncodeError .
"""
